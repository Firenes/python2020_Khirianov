В Python "x = 2 ** 100" выражение на самом деле не обозначает не присваивание, а операция связывание –– x –– имя результата вычисления, потому что с объектом x можно проводить разные операция.

В Python по сути нет переменных, но есть имена объектов, т.к. он использует ссылочную модель данных.

Деление целых –– всегда дробные (/). Если нужно получить целое, то деление такое (//).

Напиши import this и получишь дзен.

Менять тип так –– y = int(y).

round(234.6) –– 235 –– округление

input() –– юзеркский ввод




#!/usr/bin/env python3 –– что-то для скрипта (нужно будет загубить)

Запускать файл из консоли можно так: 
chmod a+x filename.py
./filename.py



Нет вторичного использования переменной!
Если name хранит имя, то не надо её использовать для хранения фамилии.




Приоритет выполнения операций
Если несколько значений возводятся в степень, то возведение в степень идёт справа налево, а не слева направо как обычно
  7   5   6   4   3    2      1
y = x + 7 > x + 2 * (x ** (3 ** x))



В циклах break нежелателен конструкцией (он является плохим тоном)


Существует генератор арифметических прогрессий

for x in 5,3,7:
    print(x**2)

Арифметическая прогрессия –– range(s, s, s) –– start, stop, step

Для for:

for x in range(start, stop, step):
    print(x)


Для while:

x = start
while x < stop:
    print(x)
    x += step

